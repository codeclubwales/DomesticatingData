#include <Sleep_n0m1.h>
#include <DHT.h>
#include <DHT_U.h>
#include <Adafruit_Sensor.h>
#include <TheThingsNetwork.h>
#include <CayenneLPP.h>

// Set your AppEUI and AppKey
const char *appEui = 
const char *appKey = 

#define loraSerial Serial1
#define debugSerial Serial

// Replace REPLACE_ME with TTN_FP_EU868 or TTN_FP_US915
#define freqPlan TTN_FP_EU868

DHT dht(2, DHT11);
TheThingsNetwork ttn(loraSerial, debugSerial, freqPlan);
CayenneLPP lpp(51);

Sleep sleep;
unsigned long sleepTime; //how long you want the arduino to sleep

void setup()
{
  loraSerial.begin(57600);
  debugSerial.begin(9600);

  // Wait a maximum of 10s for Serial Monitor
  while (!debugSerial && millis() < 10000)
    ;

  debugSerial.println("-- STATUS");
  ttn.showStatus();

  debugSerial.println("-- JOIN");
  ttn.join(appEui, appKey);

  Serial.begin(9600);
  sleepTime = 6000; //set sleep time in ms, max sleep time is 49.7 days
}

void loop()
{
 
 debugSerial.println("-- LOOP");

 uint32_t humidity = dht.readHumidity(false);
 uint32_t temperature = dht.readTemperature(false);


 byte payload[4];
 payload[0] = highByte(humidity);
 payload[1] = lowByte(humidity);
 payload[2] = highByte(temperature);
 payload[3] = lowByte(temperature);

 //ttn.sendBytes(payload, sizeof(payload));

  lpp.reset();
  lpp.addTemperature(1, temperature);
  lpp.addRelativeHumidity(2, humidity);
  //lpp.addBarometricPressure(2, 1073.21);
 //lpp.addGPS(3, 52.37365, 4.88650, 2);

  // Send it off
  ttn.sendBytes(lpp.getBuffer(), lpp.getSize());

  delay(1000);

  Serial.print("sleeping for ");
  Serial.println(sleepTime); 
  delay(100); //delay to allow serial to fully print before sleep
    
  sleep.pwrDownMode(); //set sleep mode
  sleep.sleepDelay(sleepTime); //sleep for: sleepTime

  
}
